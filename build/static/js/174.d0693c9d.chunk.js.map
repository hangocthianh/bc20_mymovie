{"version":3,"file":"static/js/174.d0693c9d.chunk.js","mappings":"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","sources":["containers/AdminTemplate/MovieManager/modules/actions.js","containers/AdminTemplate/MovieManager/_components/AddMovieModal/index.js","containers/AdminTemplate/MovieManager/_components/EditMovieModal/index.js","containers/AdminTemplate/MovieManager/_components/Movie/index.js","containers/AdminTemplate/MovieManager/index.js"],"sourcesContent":["import api from \"utils/apiUtils\";\nimport *as ActionType from \"./constants.js\";\n\n// act láº¥y danh sach phim\nexport const actFetchMovieList = ()=>{\n    return (dispatch)=>{\n        dispatch(actMovieListRequest());\n        api\n            .get('QuanLyPhim/LayDanhSachPhim?maNhom=GP01')\n            .then((result)=>{\n                dispatch(actMovieListSuccess(result.data.content))\n            })\n            .catch((error)=>{\n                dispatch(actMovieListFailed(error))\n            })\n    }\n}\nconst actMovieListRequest = ()=>{\n    return {\n        type: ActionType.MOVIE_LIST_REQUEST,\n    }\n}\nconst actMovieListSuccess=(data)=>{\n    return {\n        type: ActionType.MOVIE_LIST_SUCCESS,\n        payload: data,\n    }\n}\nconst actMovieListFailed=(error)=>{\n    return {\n        type: ActionType.MOVIE_LIST_FAILED,\n        payload: error,\n    }\n}\n\n// act thÃªm phim\nexport const actAddMovie = (formData)=>{\n    return (dispatch)=>{\n        dispatch(actAddMovieRequest());\n        api\n            .post('QuanLyPhim/ThemPhimUploadHinh', formData)\n            .then((result)=>{\n                alert(\"ThÃªm phim thÃ nh cÃ´ng!\")\n                dispatch(actAddMovieSuccess(result.data.content))\n            })\n            .catch((error)=>{\n                dispatch(actAddMovieFailed(error))\n            })\n    }\n}\nconst actAddMovieRequest = ()=>{\n    return {\n        type: ActionType.ADD_MOVIE_REQUEST,\n    }\n}\nconst actAddMovieSuccess=(data)=>{\n    return {\n        type: ActionType.ADD_MOVIE_SUCCESS,\n        payload: data,\n    }\n}\nconst actAddMovieFailed=(error)=>{\n    return {\n        type: ActionType.ADD_MOVIE_FAILED,\n        payload: error,\n    }\n}\n\n\n// act láº¥y thÃ´ng tin phim\nexport const actFetchInfoMovie = (maPhim)=>{\n    return (dispatch)=>{\n        dispatch(actInfoMovieRequest());\n        api\n            .get(`QuanLyPhim/LayThongTinPhim?MaPhim=${maPhim}`)\n            .then((result)=>{\n                dispatch(actInfoMovieSuccess(result.data.content))\n            })\n            .catch((error)=>{\n                dispatch(actInfoMovieFailed(error))\n                console.log(error.response?.data)\n            })\n    }\n}\nconst actInfoMovieRequest = ()=>{\n    return {\n        type: ActionType.INFO_MOVIE_REQUEST,\n    }\n}\nconst actInfoMovieSuccess=(data)=>{\n    return {\n        type: ActionType.INFO_MOVIE_SUCCESS,\n        payload: data,\n    }\n}\nconst actInfoMovieFailed=(error)=>{\n    return {\n        type: ActionType.INFO_MOVIE_FAILED,\n        payload: error,\n    }\n}","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { Modal, Button } from 'react-bootstrap';\nimport { IoCloseSharp } from \"react-icons/io5\";\nimport { useFormik } from \"formik\";\nimport Checkbox from '@mui/material/Checkbox';\nimport { actAddMovie } from '../../modules/actions';\nimport moment from \"moment\";\n\nexport default function AddMovieModal(props) {\n    const label = { inputProps: { 'aria-label': 'Checkbox demo' } };\n    const [imgFile, setImgFile] = useState('')\n\n    const { showAddMovieModal, handleCloseAddMovieModal } = props;\n\n    const dispatch = useDispatch();\n\n    const formik = useFormik({\n        initialValues: {\n            tenPhim: \"\",\n            trailer: \"\",\n            hinhAnh: {},\n            moTa: \"\",\n            maNhom: \"GP01\",\n            ngayKhoiChieu: \"\",\n            danhGia: 0,\n            hot: false,\n            dangChieu: false,\n            sapChieu: false,\n        },\n        onSubmit: (values) => {\n            console.log(values)\n            let formData = new FormData();\n            for (let key in values) {\n                if (key !== 'hinhAnh') {\n                    formData.append(key, values[key]);\n                } else {\n                    formData.append('File', values.hinhAnh, values.hinhAnh.name)\n                }\n            }\n            dispatch(actAddMovie(formData));\n        },\n    })\n\n    const handleChangeDate =()=>{\n        let date=new Date(document.getElementById(\"date\").value);\n        console.log(moment(date).format('DD/MM/YYYY'))\n        formik.setFieldValue('ngayKhoiChieu',moment(date).format('DD/MM/YYYY'))\n    }\n    const handleChangeSelect = (event) => {\n        if (event.target.value === \"1\") {\n            formik.setFieldValue('dangChieu', true);\n            formik.setFieldValue('sapChieu', false);\n        } else if (event.target.value === \"2\") {\n            formik.setFieldValue('dangChieu', false);\n            formik.setFieldValue('sapChieu', true);\n        }\n    }\n    const handleChangeFile = (event) => {\n        let file = event.target.files[0];\n        if (file.type === 'image/jpeg' || file.type === 'image/jpg' || file.type === 'image/png' || file.type === 'image/gif') {\n            let reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = (e) => {\n                setImgFile(e.target.result)\n            }\n            formik.setFieldValue('hinhAnh', file)\n        }\n    }\n\n    return (\n        <Modal size=\"lg\" show={showAddMovieModal} onHide={handleCloseAddMovieModal} animation={false}>\n            <form onSubmit={formik.handleSubmit} className=\"needs-validation\" id=\"movieForm\">\n                <Modal.Header>\n                    <Modal.Title>ThÃªm phim</Modal.Title>\n                    <Button\n                        variant=\"secondary\"\n                        onClick={handleCloseAddMovieModal}\n                        style={{ display: 'inherit', alignSelf: 'center' }}\n                    ><IoCloseSharp size={20} />\n                    </Button>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className='row'>\n                        <div className=\"col-12 mb-3\">\n                            <label htmlFor=\"nameMovie\">TÃªn phim</label>\n                            <input type=\"text\" className=\"form-control\" id=\"nameMovie\" name=\"tenPhim\" placeholder=\"Nháº­p tÃªn phim\" onChange={formik.handleChange}\n                            />\n                            {/* {formik.errors.tenPhim ? <div id=\"invalidName\" className=\"invalid-form\">{formik.errors.tenPhim}\n                            </div> : null} */}\n\n                        </div>\n                        <div className=\"col-12 mb-3\">\n                            <label htmlFor=\"trailer\">Trailer</label>\n                            <input type=\"text\" className=\"form-control\" id=\"trailer\"\n                                name=\"trailer\" placeholder=\"Nháº­p trailer\" onChange={formik.handleChange} />\n                            <div id=\"invalidTrailer\" className=\"invalid-form\">\n                            </div>\n                        </div>\n                        <div className=\"col-12 mb-3\">\n                            <label htmlFor=\"desc\">MÃ´ Táº£</label>\n                            <textarea className=\"form-control\" id=\"desc\" name=\"moTa\" rows={3} placeholder=\"Nháº­p mÃ´ táº£\" onChange={formik.handleChange}\n                            />\n                            <div id=\"invalidDesc\" className=\"invalid-form\">\n                            </div>\n                        </div>\n                        <div className=\"col-sm-4 mb-3\">\n                            <label htmlFor=\"date\">NgÃ y khá»i chiáº¿u</label>\n                            <div className=\"input-group\">\n                                <div className=\"input-group-prepend\">\n                                    <span className=\"input-group-text\"><i className=\"fa fa-calendar\" /></span>\n                                </div>\n                                <input type=\"date\" name=\"ngayKhoiChieu\" id=\"date\" className=\"form-control\" placeholder=\"NgÃ y cÃ´ng chiáº¿u\" onChange={handleChangeDate}\n                                />\n                            </div>\n\n                            <div id=\"invalidDate\" className=\"invalid-form\">\n                            </div>\n                        </div>\n                        <div className=\"col-sm-4 mb-3\">\n                            <label htmlFor=\"status\">TÃ¬nh tráº¡ng</label>\n                            <select className=\"custom-select d-block w-100\" id=\"status\" onChange={handleChangeSelect}>\n                                <option value=\"0\">Chá»n tÃ¬nh tráº¡ng</option>\n                                <option value=\"1\">Äang chiáº¿u</option>\n                                <option value=\"2\">Sáº¯p chiáº¿u</option>\n                            </select>\n                            <div id=\"invalidStatus\" className=\"invalid-feedback\">\n                            </div>\n                        </div>\n                        <div className=\"col-sm-4 mb-3\">\n                            <label htmlFor=\"score\">Äiá»m ÄÃ¡nh giÃ¡</label>\n                            <input type=\"number\" className=\"form-control\" id=\"score\"\n                                name=\"danhGia\" placeholder=\"Nháº­p Äiá»m ÄÃ¡nh giÃ¡\" onChange={formik.handleChange} />\n                            <div id=\"invalidScore\" className=\"invalid-form\">\n                            </div>\n                        </div>\n                        <div className=\"col-sm-4 mb-3\">\n                            <label htmlFor=\"hot\">Hot</label>\n                            <Checkbox\n                                onChange={formik.handleChange}\n                                {...label}\n                                id=\"hot\"\n                                name=\"hot\"\n                                sx={{ '& .MuiSvgIcon-root': { fontSize: 28 } }}\n                            />\n                            <div id=\"invalidHot\" className=\"invalid-feedback\">\n                            </div>\n                        </div>\n                        <div className=\"col-sm-4 mb-3\">\n                            <div className=\"form-group\">\n                                <label htmlFor=\"img\">HÃ¬nh áº£nh</label><br />\n                                <input type=\"file\" id=\"img\" name=\"hinhAnh\" onChange={handleChangeFile} accept='image/jpeg, image/png, image/gif, image/jpg' />\n                                <img className='mt-2' width={100} src={imgFile} alt={imgFile} />\n                            </div>\n                        </div>\n\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <div>\n                        {/* <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                    <button type=\"button\" className=\"btn btn-warning\" id=\"btnCapNhat\">Cáº­p Nháº­t</button> */}\n                        <button type=\"submit\" className=\"btn btn-warning\" id=\"btnAddMovie\">ThÃªm</button>\n                    </div>\n                </Modal.Footer>\n            </form>\n        </Modal>\n\n    )\n}\n\n\n\n","import React, {useState, useEffect} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Modal, Button } from 'react-bootstrap';\nimport { IoCloseSharp } from \"react-icons/io5\";\nimport { useFormik } from \"formik\";\nimport Checkbox from '@mui/material/Checkbox';\nimport { actFetchInfoMovie } from '../../modules/actions';\nimport moment from \"moment\"\n\nexport default function EditMovieModal(props) {\n    const label = { inputProps: { 'aria-label': 'Checkbox demo' } };\n    const [imgFile, setImgFile] = useState('')\n    const { showEditMovieModal, handleCloseEditMovieModal } = props;\n\n    const data = useSelector(state => state.movieManagerReducer.dataInfoMovie);\n    const loading = useSelector(state => state.movieManagerReducer.loadingInfoMovie);\n    const error = useSelector(state => state.movieManagerReducer.errorInfoMovie);    \n    const dispatch = useDispatch();\n    useEffect(() => {\n        const {id}=props;\n        console.log(id);\n        (dispatch(actFetchInfoMovie(id)));\n    }, []);\n\n    const formik = useFormik({\n        initialValues: {\n            tenPhim: \"\",\n            trailer: \"\",\n            hinhAnh: {},\n            moTa: \"\",\n            maNhom: \"GP01\",\n            ngayKhoiChieu: \"\",\n            danhGia: 0,\n            hot: false,\n            dangChieu: false,\n            sapChieu: false,\n        },\n        onSubmit: (values) => {\n            console.log(values)\n            let formData = new FormData();\n            for (let key in values) {\n                if (key !== 'hinhAnh') {\n                    formData.append(key, values[key]);\n                } else {\n                    formData.append('File', values.hinhAnh, values.hinhAnh.name)\n                }\n            }\n        },\n    })\n\n\n    const handleChangeDate =()=>{\n        let date=new Date(document.getElementById(\"date\").value);\n        console.log(moment(date).format('DD/MM/YYYY'))\n        formik.setFieldValue('ngayKhoiChieu',moment(date).format('DD/MM/YYYY'))\n    }\n    const handleChangeSelect = (event) => {\n        if (event.target.value === \"1\") {\n            formik.setFieldValue('dangChieu', true);\n            formik.setFieldValue('sapChieu', false);\n        } else if (event.target.value === \"2\") {\n            formik.setFieldValue('dangChieu', false);\n            formik.setFieldValue('sapChieu', true);\n        }\n    }\n    const handleChangeFile = (event) => {\n        let file = event.target.files[0];\n        if (file.type === 'image/jpeg' || file.type === 'image/jpg' || file.type === 'image/png' || file.type === 'image/gif') {\n            let reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = (e) => {\n                setImgFile(e.target.result)\n            }\n            formik.setFieldValue('hinhAnh', file)\n        }\n    }\n\n  return (\n    <Modal size=\"lg\" show={showEditMovieModal} onHide={handleCloseEditMovieModal} animation={false}>\n            <form onSubmit={formik.handleSubmit} className=\"needs-validation\" id=\"movieForm\">\n                <Modal.Header>\n                    <Modal.Title>Chá»nh sá»­a thÃ´ng tin</Modal.Title>\n                    <Button\n                        variant=\"secondary\"\n                        onClick={handleCloseEditMovieModal}\n                        style={{ display: 'inherit', alignSelf: 'center' }}\n                    ><IoCloseSharp size={20} />\n                    </Button>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className='row'>\n                        <div className=\"col-12 mb-3\">\n                            <label htmlFor=\"nameMovie\">TÃªn phim</label>\n                            <input type=\"text\" className=\"form-control\" id=\"nameMovie\" name=\"tenPhim\" placeholder=\"Nháº­p tÃªn phim\" onChange={formik.handleChange}\n                            />\n                            <div id=\"invalidName\" className=\"invalid-form\"></div>\n                        </div>\n                        <div className=\"col-12 mb-3\">\n                            <label htmlFor=\"trailer\">Trailer</label>\n                            <input type=\"text\" className=\"form-control\" id=\"trailer\"\n                                name=\"trailer\" placeholder=\"Nháº­p trailer\" onChange={formik.handleChange} />\n                            <div id=\"invalidTrailer\" className=\"invalid-form\">\n                            </div>\n                        </div>\n                        <div className=\"col-12 mb-3\">\n                            <label htmlFor=\"desc\">MÃ´ Táº£</label>\n                            <textarea className=\"form-control\" id=\"desc\" name=\"moTa\" rows={3} placeholder=\"Nháº­p mÃ´ táº£\" onChange={formik.handleChange}\n                            />\n                            <div id=\"invalidDesc\" className=\"invalid-form\">\n                            </div>\n                        </div>\n                        <div className=\"col-sm-4 mb-3\">\n                            <label htmlFor=\"date\">NgÃ y khá»i chiáº¿u</label>\n                            <div className=\"input-group\">\n                                <div className=\"input-group-prepend\">\n                                    <span className=\"input-group-text\"><i className=\"fa fa-calendar\" /></span>\n                                </div>\n                                <input type=\"date\" name=\"ngayKhoiChieu\" id=\"date\" className=\"form-control\" placeholder=\"NgÃ y cÃ´ng chiáº¿u\" onChange={handleChangeDate}\n                                />\n                            </div>\n\n                            <div id=\"invalidDate\" className=\"invalid-form\">\n                            </div>\n                        </div>\n                        <div className=\"col-sm-4 mb-3\">\n                            <label htmlFor=\"status\">TÃ¬nh tráº¡ng</label>\n                            <select className=\"custom-select d-block w-100\" id=\"status\" onChange={handleChangeSelect}>\n                                <option value=\"0\">Chá»n tÃ¬nh tráº¡ng</option>\n                                <option value=\"1\">Äang chiáº¿u</option>\n                                <option value=\"2\">Sáº¯p chiáº¿u</option>\n                            </select>\n                            <div id=\"invalidStatus\" className=\"invalid-feedback\">\n                            </div>\n                        </div>\n                        <div className=\"col-sm-4 mb-3\">\n                            <label htmlFor=\"score\">Äiá»m ÄÃ¡nh giÃ¡</label>\n                            <input type=\"number\" className=\"form-control\" id=\"score\"\n                                name=\"danhGia\" placeholder=\"Nháº­p Äiá»m ÄÃ¡nh giÃ¡\" onChange={formik.handleChange} />\n                            <div id=\"invalidScore\" className=\"invalid-form\">\n                            </div>\n                        </div>\n                        <div className=\"col-sm-4 mb-3\">\n                            <label htmlFor=\"hot\">Hot</label>\n                            <Checkbox\n                                onChange={formik.handleChange}\n                                {...label}\n                                id=\"hot\"\n                                name=\"hot\"\n                                sx={{ '& .MuiSvgIcon-root': { fontSize: 28 } }}\n                            />\n                            <div id=\"invalidHot\" className=\"invalid-feedback\">\n                            </div>\n                        </div>\n                        <div className=\"col-sm-4 mb-3\">\n                            <div className=\"form-group\">\n                                <label htmlFor=\"img\">HÃ¬nh áº£nh</label><br />\n                                <input type=\"file\" id=\"img\" name=\"hinhAnh\" onChange={handleChangeFile} accept='image/jpeg, image/png, image/gif, image/jpg' />\n                                <img className='mt-2' width={100} src={imgFile} alt={imgFile} />\n                            </div>\n                        </div>\n\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <div>\n                        <button type=\"submit\" className=\"btn btn-warning\" id=\"btnAddMovie\">Cáº­p nháº­t</button>\n                    </div>\n                </Modal.Footer>\n            </form>\n        </Modal>\n  )\n}\n","import React, { useState } from 'react';\nimport EditMovieModal from '../EditMovieModal';\n\nexport default function Movie(props) {\n  const { movie } = props;\n  // Modal Edit Movie\n  const [showEditMovieModal, setShowEditMovieModal] = useState(false);\n  const handleShowEditMovieModal = () => setShowEditMovieModal(true);\n  const handleCloseEditMovieModal = () => setShowEditMovieModal(false);\n\n  return (\n    <tr className='text-center mt-5 listMovie'>\n      <td>{movie.maPhim}</td>\n      <td>{movie.tenPhim}</td>\n      <td >\n        <img className='w-25' src={movie.hinhAnh} alt={movie.hinhAnh} />\n      </td>\n      <td >\n        <p className='descMovie'>{movie.moTa}</p>\n      </td>\n      <td className='w-25'>\n        <button className='btn btn-info mr-3 mt-1' onClick={()=>{\n          handleShowEditMovieModal()\n          }}>Edit</button>\n        <EditMovieModal id={movie.maPhim} showEditMovieModal={showEditMovieModal} handleCloseEditMovieModal={handleCloseEditMovieModal} />\n        <button className='btn btn-danger mt-1'>Delete</button>\n      </td>\n    </tr>\n\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { NavLink } from 'react-router-dom'\nimport { actFetchMovieList } from './modules/actions'\nimport \"./style.css\"\nimport AddMovieModal from \"./_components/AddMovieModal\"\nimport Movie from './_components/Movie'\n\n\nexport default function MovieManager() {\n\n    const data = useSelector(state => state.movieManagerReducer.data);\n\n    const dispatch = useDispatch();\n    useEffect(() => {\n        (dispatch(actFetchMovieList()));\n    }, []);\n\n    // Modal Add Movie\n    const [showAddMovieModal, setShowAddMovieModal] = useState(false);\n    const handleShowAddMovieModal = () => setShowAddMovieModal(true);\n    const handleCloseAddMovieModal = () => setShowAddMovieModal(false);\n\n    const renderMovieList = () => {\n        return data?.map((movie, index) => {\n            return (\n                <Movie movie={movie} key={index}/>\n            )\n        })\n    }\n\n    return (\n        <div className='container-fluid'>\n            <nav id=\"sidebarMenu\" className=\"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse\">\n                <div className=\"sidebar-sticky pt-3\">\n                    <ul className=\"nav flex-column\">\n                        <li className=\"nav-item\">\n                            <NavLink activeClassName=\"active\" className=\"nav-link\" to=\"/dashboard\">\n                                <i className=\"fa fa-home mr-1\" />\n                                Dashboard <span className=\"sr-only\">(current)</span>\n                            </NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink activeClassName=\"active\" className=\"nav-link\" to=\"/movie-manager\">\n                                <i className=\"fa fa-film mr-1\" />\n                                Movies List\n                            </NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink activeClassName=\"active\" className=\"nav-link\" to=\"/user-list\">\n                                <i className=\"fa fa-user mr-1\" />\n                                Users List\n                            </NavLink>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n            <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 px-md-4\">\n                <h2 className='my-3'>Danh SÃ¡ch Phim</h2>\n                {/* Button modal */}\n                <div className=\"row\">\n                    <div className=\"col-8\">\n                        <button\n                            id=\"btnAdd\"\n                            type=\"button\"\n                            className=\"btn btn-warning mb-3\"\n                            onClick={() => {\n                                handleShowAddMovieModal()\n                            }}\n                        >\n                            ThÃªm Phim\n                        </button>\n                        <AddMovieModal showAddMovieModal={showAddMovieModal} handleCloseAddMovieModal={handleCloseAddMovieModal}/>\n                    </div>\n                    <div className=\"col-4\">\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"tenPhim\" className=\" col-form-label\">TÃ¬m kiáº¿m</label>\n                            <div className=\"col-sm-9\">\n                                <div className=\"input-group\">\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"TÃªn phim\" id=\"searchName\" />\n                                    <div className=\"input-group-prepend\">\n                                        <span className=\"input-group-text\" id=\"btnTimNV\"><i className=\"fa fa-search\" /></span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"table-responsive table-striped moviesTable\">\n                    <table className=\"table table-striped table-sm\">\n                        <thead>\n                            <tr className=\"bg-warning text-white text-center\">\n                                <th>MÃ£</th>\n                                <th>TÃªn phim</th>\n                                <th>HÃ¬nh áº£nh</th>\n                                <th>MÃ´ táº£</th>\n                                <th>TÃ¹y chá»nh</th>\n                            </tr>\n                        </thead>\n                        <tbody id=\"tbodyMovies\">\n                            {renderMovieList()}\n                        </tbody>\n                    </table>\n                </div>\n            </main>\n\n        </div>\n    )\n}\n"],"names":["actMovieListRequest","type","ActionType","actMovieListSuccess","data","payload","actMovieListFailed","error","actAddMovieRequest","actAddMovieSuccess","actAddMovieFailed","actInfoMovieRequest","actInfoMovieSuccess","actInfoMovieFailed","AddMovieModal","props","useState","imgFile","setImgFile","showAddMovieModal","handleCloseAddMovieModal","dispatch","useDispatch","formik","useFormik","initialValues","tenPhim","trailer","hinhAnh","moTa","maNhom","ngayKhoiChieu","danhGia","hot","dangChieu","sapChieu","onSubmit","values","console","log","formData","FormData","key","append","name","api","then","result","alert","content","catch","actAddMovie","Modal","size","show","onHide","animation","handleSubmit","className","id","Button","variant","onClick","style","display","alignSelf","htmlFor","placeholder","onChange","handleChange","rows","date","Date","document","getElementById","value","moment","format","setFieldValue","event","target","Checkbox","inputProps","sx","fontSize","file","files","reader","FileReader","readAsDataURL","onload","e","accept","width","src","alt","EditMovieModal","showEditMovieModal","handleCloseEditMovieModal","useSelector","state","movieManagerReducer","dataInfoMovie","loadingInfoMovie","errorInfoMovie","useEffect","maPhim","response","Movie","movie","setShowEditMovieModal","MovieManager","setShowAddMovieModal","activeClassName","to","role","map","index"],"sourceRoot":""}